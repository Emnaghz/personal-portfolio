name: Build and Push Docker Image On Merge
on:
  push:
    branches: ['main']

  workflow_dispatch:

jobs:
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      api: ${{ steps.filter.outputs.api }}
      widget: ${{ steps.filter.outputs.widget }}
    steps:
      - uses: actions/checkout@v4
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            api:  
              - 'api/**'
            widget:
              - 'widget/**'

  frontend-build-and-push:
    runs-on: ubuntu-latest
    needs: 
      - paths-filter
    if: ${{ needs.paths-filter.outputs.frontend == 'true' }}  
    steps:
      - name: Check out repository code ...
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub and export auth token
        id: login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend docker image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/hexabot-frontend:latest
        env:
          DOCKER_AUTH_CONFIG: ${{ needs.docker-setup.outputs.auth_token }}  

  api-build-and-push:
    runs-on: ubuntu-latest
    needs: 
      - paths-filter
    # if: ${{ needs.paths-filter.outputs.api == 'true' }}
    steps:
      - name: Check out repository code ...
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub and export auth token
        id: login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./api/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/hexabot-api:latest

  widget-build-and-push:
    runs-on: ubuntu-latest
    needs: 
      - paths-filter
    # if: ${{ needs.paths-filter.outputs.widget == 'true' }}
    steps:
      - name: Check out repository code ...
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub and export auth token
        id: login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./widget/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/hexabot-widget:latest
